import { extend } from 'lodash';
import { ClientModel } from './client';

export class UserModel {
    companies?: CompanyModel[];
    usrId?: number;
    usrFullname?: string;
    usrLoginname?: string;
    usrEmail?: string;
    usrAdd?: string;
    usrZip?: number;
    usrCity?: string;
    usrPhone1?: string;
    usrPhone2?: string;
    usrComments?: string;
    lastLogin?: string;
    roles?: string;
    usrActive?: number;
    usrApproved?: number;
    usrComid?: number;
    usrCreatedby?: string;
    usrCreatedttm?: string;
    usrGdpr?: string;
    usrGuid?: string;
    usrOrganization?: string;
    usrProid?: string;
    usrResetpwd?: string;
    usrStatus?: boolean;
    usrTraining?: string;
    usrTrainingValid?: string;
    usrType?: number;

    constructor() { }
}

export class CompanyModel {
    comID?: number;
    comType?: number;
    comCompanyvat?: string;
    comCompanyname?: string;
    comEmail?: string;
    comAdd?: string;
    comProid?: null;
    comZip?: string;
    comCity?: string;
    comPhone1?: string;
    comStatus?: true;
    comCreatedttm?: string;
    comCreatedby?: 1;
    comEpdinfo1?: string;
    comEpdinfo2?: string;
    comEpdinfo3?: string;
    comEpdinfo4?: string;
    comEpdpicture1?: null;
    comEpdpicture2?: null;
    comLogo?: string;
    comDir?: null;
    comPageText?: string;
    comBannerLogo?: null;
    comMainContact?: string;
    comManagmentSys?: string;
    comWeb?: string;
    comPhone2?: string;
    comSystem?: null;
    comStartup?: null;
    comPaidTo?: string;
    comGuid?: string;
    comCountry?: number;
    comToken?: string;
    comModulSubFase?: number;
    comModulSharing?: number;
    comProgramOperator?: number;

}

export class AuthUser {
    id: number;
    username: string;
    password: string;
    firstName: string;
    lastName: string;
    token: string;
}

// Generated by https://quicktype.io

export interface UserAddingModel {
    usrAdd?: string;
    usrCity?: string;
    usrComments?: string;
    usrEmail?: string;
    usrFullname?: string;
    usrLoginname?: string;
    usrPhone1?: number;
    usrZip?: number;
}
export class AuthenticatedUser {
    usrId: number;
    usrLoginname: string;
    usrType: number;
    usrFullname: string;
    usrEmail: string;
    roles: string;
    token: string;
    companies: ClientModel[];
    private _activeCompany: ClientModel;

    constructor() { }

    getActiveCompany(): ClientModel {
        return this._activeCompany;
    }

    setActiveCompany(companyID: number): void {
        this._activeCompany = extend(
            new ClientModel(),
            this.companies.find((c: ClientModel) => c.comId === companyID),
        );
    }

    hasActiveCompany(): boolean {
        return this._activeCompany?.comId !== undefined;
    }
}

export class LoginRequest {
    userName: string;
    password: string;
}
