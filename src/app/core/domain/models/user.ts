import { extend } from 'lodash';
import { ClientModel } from './client';

export class UserModel {
  usrId?: number;
  usrFullname?: string;
  usrLoginname?: string;
  usrEmail?: string;
  usrAdd?: string;
  usrZip?: number;
  usrCity?: string;
  usrPhone1?: string;
  usrPhone2?: string;
  usrComments?: string;
  lastLogin?: string;
  roles?: string;
  usrActive?: number;
  usrApproved?: number;
  usrComid?: number;
  usrCreatedby?: string;
  usrCreatedttm?: string;
  usrGdpr?: string;
  usrGuid?: string;
  usrOrganization?: string;
  usrProid?: string;
  usrResetpwd?: string;
  usrStatus?: boolean;
  usrTraining?: string;
  usrTrainingValid?: string;
  usrType?: number;

  constructor() {}
}

export class AuthUser {
  id: number;
  username: string;
  password: string;
  firstName: string;
  lastName: string;
  token: string;
}

// Generated by https://quicktype.io

export interface UserAddingModel {
  usrAdd?: string;
  usrCity?: string;
  usrComments?: string;
  usrEmail?: string;
  usrFullname?: string;
  usrLoginname?: string;
  usrPhone1?: number;
  usrZip?: number;
}
export class AuthenticatedUser {
  usrId: number;
  usrLoginname: string;
  usrType: number;
  usrFullname: string;
  usrEmail: string;
  roles: string;
  token: string;
  companies: ClientModel[];
  private _activeCompany: ClientModel;

  constructor() {}

  getActiveCompany(): ClientModel {
    return this._activeCompany;
  }

  setActiveCompany(companyID: number): void {
    this._activeCompany = extend(
      new ClientModel(),
      this.companies.find((c: ClientModel) => c.comId === companyID),
    );
  }
}

export class LoginRequest {
  userName: string;
  password: string;
}
